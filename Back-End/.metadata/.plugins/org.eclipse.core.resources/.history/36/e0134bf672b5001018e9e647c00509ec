package com.backend.chapterVerse.controller;

import java.util.List;
import java.util.Optional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.backend.chapterVerse.entity.User;
import com.backend.chapterVerse.repository.UserRepository;

@RestController
@RequestMapping("/api/Users")
@CrossOrigin(origins = "http://localhost:5173")
public class UserController {
	@Autowired
	private UserRepository userRepository;
	
	@PostMapping("/register")
	public String RegisterUser(@RequestBody User user) {
		Optional<User> existingUser=userRepository.findByEmail(user.getEmail());
		if(existingUser.isPresent()) {
			return "Account already Exists";
		}
		if(user.getRole()==null || user.getRole().isEmpty()) {
			user.setRole("User");
		}
		userRepository.save(user);
		return "Account Registered!";
	}
	
	@PostMapping("/login")
	public Object loginUser(@RequestBody User LoginInfo) {
		Optional<User> existingUser=userRepository.findByEmail(LoginInfo.getEmail());
		if(existingUser.isEmpty()) {
			return "User Not Found";
		}
		User user=existingUser.get();
		if(!user.getPassword().equals(LoginInfo.getPassword()))
		{
			return "Invalid Password";
		}
		user.setPassword("********");
		return User;
	}
	
	@GetMapping("/all")
	public List<User> allUsers(){
		return userRepository.findAll();
	}
}